"""
Django settings for finance_bot project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os

from pathlib import Path
from dotenv import load_dotenv


def get_env_list(name: str, separator: str = ',') -> list[str]:
    val = os.environ.get(name, None)
    if val is None:
        return []
    return val.split(separator)


load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-b6xnd-9(6-x5lfrfm52phbmp0t)5y-q#zb&w3u1q4nz=e+*b1w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "False").lower() in ("true", "1", "yes")

ALLOWED_HOSTS = get_env_list("ALLOWED_HOSTS")

API_KEY = os.environ.get("API_KEY", "1234567890") 


# Application definition

INSTALLED_APPS = [
    'finance_bot.finance',
    'finance_bot.langchain_bot',
    'finance_bot.telegram_bot',
    'finance_bot.users',
    'daphne',
    'drf_spectacular',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'finance_bot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'finance_bot.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'db.sqlite'
    }
}

db_engine = os.environ.get("DATABASE_ENGINE", "sqlite3")
if db_engine == "postgresql":
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get("DATABASE_NAME", "finances"),
        'USER': os.environ.get("DATABASE_USER", "usr_finance_bot"),
        'PASSWORD': os.environ.get("DATABASE_PASSWORD", "postgres"),
        'HOST': os.environ.get("DATABASE_HOST", "localhost"),
        'PORT': os.environ.get("DATABASE_PORT", "5432"),
    }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'users.User'


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = BASE_DIR / 'static'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Django Rest Framework

REST_FRAMEWORK = {
    # YOUR SETTINGS
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'finance_bot.authentication.ApiKeyAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}


# Swagger gen

SPECTACULAR_SETTINGS = {
    'TITLE': 'Finance Bot',
    'DESCRIPTION': 'A finance bot',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    # OTHER SETTINGS
}

# Channels
# More information on https://channels.readthedocs.io/en/latest/index.html

ASGI_APPLICATION = "finance_bot.asgi.application"

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",
    },
}

# Agent

AGENT_SETTINGS = {
    "tools": [
        "finance_bot.langchain_bot.tools.CreateCategoryTool",
        "finance_bot.langchain_bot.tools.CreateTransactionTool",
        "finance_bot.langchain_bot.tools.SearchUserCategoriesTool",
        "finance_bot.langchain_bot.tools.SearchCategoryTool",
        "finance_bot.langchain_bot.tools.SearchTransactionsTool",
        "finance_bot.langchain_bot.tools.UpdateCategoryTool",
        "finance_bot.langchain_bot.tools.UpdateTransactionTool",
        "finance_bot.langchain_bot.tools.DeleteCategoryTool",
        "finance_bot.langchain_bot.tools.DeleteTransactionTool",
    ]
}
